import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "org.jlleitschuh.gradle.ktlint"
//    // add kotlin-android-extensions
//    id 'kotlin-android-extensions'
    id 'com.google.gms.google-services'
}


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    buildFeatures {
        viewBinding true
    }

    defaultConfig {
        applicationId "ng.com.jedun.continousintegrationproject"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.firebase:firebase-database:19.7.0'
    implementation 'com.google.firebase:firebase-firestore:22.1.2'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    testImplementation "com.google.truth:truth:1.1.2"
    // recyclerview
    implementation "androidx.recyclerview:recyclerview:1.2.0"
    implementation "androidx.recyclerview:recyclerview:1.2.0"
    // For control over item selection of both touch and mouse driven selection
    implementation "androidx.recyclerview:recyclerview-selection:1.1.0"
}

//task installGitHook(type: Copy) {
//    def suffix = "macos"
//    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//        suffix = "windows"
//    }
//    from new File(rootProject.rootDir, "scripts/pre-commit-$suffix")
//    into { new File(rootProject.rootDir, '.git/hooks') }
//    rename("pre-commit-$suffix", 'pre-commit')
//    fileMode 0775
//
//    copy {
//        def prePushSuffix = "macos"
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            prePushSuffix = "windows"
//        }
//        from new File(rootProject.rootDir, "scripts/pre-push-$prePushSuffix")
//        into { new File(rootProject.rootDir, '.git/hooks') }
//        rename("pre-push-$prePushSuffix", 'pre-push')
//        fileMode 0777
//    }
//}


//tasks.getByPath(':app:preBuild').dependsOn installGitHook